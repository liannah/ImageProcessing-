One. First I have tried to brighten up the dark image of 61-14, with the error algorithm I have got in the stage2. The result was not a bad one. I have splitted up the HSB channels and only applied the pluginBrightness for Brightness channel, and the other two remained unchanged. The result can be found in the  61-14-Brightness. 


Two. After some analysis of the four pictures, I tried to develop some algorithm for smile detection by having one picture. After applying binary_layer_2, I have noticed that the wideness of the nose in all pictures changes depending if the person is smiling or not. Thus, I have tried to do some research, particularly, in the 59-11 picture the wide area of the nose (end part) goes in x direction from 307-367, in 60-11 294-345, in 61-11 299-354, 62-11 290-346 approcimately. Thus from this observation, the average of the wideness of the nose is 55 (+-5) when the person is not smiling. When the person is smilling, the wideness changes with +10 (+-5), which led me to believe that when the person is smiling their nose wideness changes with at least +10. Therefore, after applying binary_Layer_2 and calculating the wideness of the nose and comapring it with 55, we will be able to determine if the person is smilling in the picture or not, thus revealing the mood. Of course, some exceptions are to be considered -> Afro- Americans, whose noses are usually wider, and in general race of the person. Also for the determination of the mood, other emotions can cause the wideness of the nose such as bad smell or similar, however I believe after bigger observations, some pattern of how wide the nose becomes can be determined when the person is smiling. 
Two of the results - 61 and 59 pictures, as the other ones did not have a good result after applying binary_layer_2 in the nose area. 


Three. Process -> Find Edges, Process -> Filter -> Unsharp Mask (4, and 0.8 parameters), Image -> Binary -> Make binary. This filter is applied on xx-14 pictures with bad lightening. The result is the shape of the countor of the face and the pupils position. The result can be used to determine the position of the pupils, the distance from each other, as well as from the neck's continuation to the face, we can see tendency where the boys is done more smoothly, while in girls it is done with sharper angle. This observation can be a good start in determining the gender of the person in the picture, especially given the fact that naturally in boys that area is sharper biologically than in girls. Another good thing about this pictures is that with the neck and face continuation and the angle at which this change occurs can be a determining factor in understanding how fat the person is (more precisely the ratio of the face and angel of the neckvsface).
Other nice result of pupils and contour is achieved in picture 61-14-ContourColor. I really like how highlighted white are the pupils and contour. It is achieved by applying maximum filter with 10 radius after unsharp mask. Another way of achieving similar goal can be by applying Process -> Math -> gamma (value 4.9). The result is xx-14-CounterGamma.   

Four. By cropping the picture like in 61-14aContour, and getting its contour, one can determine the age in rough scales of the person. As if the person, after dividing the screen in horizontal and vertical parts, divides up euqally (more or less) than in the picture we have an adult, while in the case of the baby, the divide will not be equal as contour of the face will be accordingly smaller.    


Five. The binary_layer_2 and binary_layer_3 together give the whole feauture of the complete face parts in their regions separately(eyes, nose, mouth, and ears). I have got the result by applying plugins two 61-11 image (the best reference picture), and got very good result. Thus now, I have had the contour and face parts, the next thing I did was combine them together and get the whole picture, thus creating a feature of applying the face of different people on different bodies. Pictures 59-61-Face, 61-61-Face. 


Six. Finding the layout of hair. Process -> Math -> Square is applied, after which we see very bright picture with mainly hair left in the picture, after that Process -> Binary -> Make Binary is applied, and we see quite good result in finding hair portions in the individual. Pictures xx-11-hair. Works good for the 90 degree rotated pictures as well. xx-11-hairRotate. 


 